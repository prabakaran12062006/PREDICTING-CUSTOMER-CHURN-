import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import classification_report, confusion_matrix, accuracy_score
import matplotlib.pyplot as plt
import seaborn as sns

# Generate sample customer churn data
np.random.seed(42)
num_customers = 1000

data = {
    'customer_id': range(1, num_customers + 1),
    'age': np.random.randint(18, 70, size=num_customers),
    'gender': np.random.choice(['Male', 'Female'], size=num_customers),
    'tenure': np.random.randint(1, 72, size=num_customers),
    'monthly_charges': np.round(np.random.uniform(20, 100, size=num_customers), 2),
    'total_charges': np.round(np.random.uniform(50, 5000, size=num_customers), 2),
    'contract_type': np.random.choice(['Month-to-month', 'One year', 'Two year'], size=num_customers, p=[0.5, 0.3, 0.2]),
    'internet_service': np.random.choice(['DSL', 'Fiber optic', 'No'], size=num_customers, p=[0.4, 0.4, 0.2]),
    'online_security': np.random.choice(['Yes', 'No', 'No internet service'], size=num_customers, p=[0.3, 0.5, 0.2]),
    'tech_support': np.random.choice(['Yes', 'No', 'No internet service'], size=num_customers, p=[0.3, 0.5, 0.2]),
    'monthly_usage_gb': np.round(np.random.uniform(0, 500, size=num_customers), 1),
    'payment_method': np.random.choice(['Electronic check', 'Mailed check', 'Bank transfer', 'Credit card'], size=num_customers),
    'churn': np.random.choice([0, 1], size=num_customers, p=[0.7, 0.3])
}

# Create DataFrame
df = pd.DataFrame(data)

# Save to CSV
df.to_csv('customer_churn_data.csv', index=False)
print("Sample customer churn data saved to 'customer_churn_data.csv'")

# Load the data
df = pd.read_csv('customer_churn_data.csv')
